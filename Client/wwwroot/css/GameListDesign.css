font-face {
    font-family: 'Varela Round';
}


.table-container {
    max-height: 424px; /* Set the maximum height for the container */
    overflow-y: auto; /* Enable vertical scrolling */
    border-radius: 30px; /* Optional: Apply border-radius to the container */
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for container */
    margin: 1rem auto; /* Optional: Center container */
    scrollbar-width: thin;
    scrollbar-color: orange transparent; /* Color of the scrollbar thumb and track */
    position: relative;
    bottom: 70px;
    direction: ltr;
}

    .table-container > table {
        direction: rtl;
    }

/* Sticky header */
#GamesTable thead th {
    position: sticky;
    top: 0;
    background-color: #f3f3f3; /* Light gray background for headers */
    color: #333; /* Darker text for contrast */
    z-index: 1; /* Ensure the header stays above table content */
}

/* Table Structure and Basic Styling */
body {
    font-family: 'Varela Round', sans-serif;
    font-size: 12px;
}

.no-games-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 500px; /* Full viewport height */
    text-align: center; /* Center text alignment */
}

    .no-games-container img {
        margin-bottom: 20px; /* Space between image and text */
        position:relative;
        bottom:30px;
    }

    .no-games-container h3 {
        margin-bottom: 20px; /* Space between text and button */
        position: relative;
        bottom: 50px;
    }

.orangeButton {
    /* Add any additional styling for the button here */
}


#newGameButton {
    margin-top: -40px;
    position:relative;
    bottom:80px;
}

.image-container {
    position: relative;
    height: 160px;
    width: 300px;
}

.headerBoard {
    position: relative;
    right: 30px;
    bottom: 40px;
    z-index: -1;
    height: auto;
    width: 230px;
}

.text-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white; /* Adjust the text color as needed */
    font-size: 24px; /* Adjust the font size as needed */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Add a text shadow for better visibility */
    display: flex;
    align-items: center;
    justify-content: center;
}


.orangeButton, .orangeButtonNoGames {
    font-family: 'Varela Round';
    background-color: orange;
    border-radius: 15px;
    height: 50px;
    width: 17%;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
    transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Add transition for background color and box shadow */
    position: relative; /* Add position relative for the overlay */
    bottom: 60px;
    right: 270px;
    overflow: hidden; /* Hide the overflow for the overlay */
    color: black; /* Set the text color to white */
    border: none; /* Remove border */
    display: inline-flex; /* Use flexbox for centering content */
    align-items: center; /* Center content vertically */
    justify-content: center; /* Center content horizontally */
    text-align: center; /* Center text */
    font-size: 16px; /* Adjust font size as needed */
    cursor: pointer; /* Add a pointer cursor on hover */
}

    .orangeButton:hover, .orangeButtonNoGames:hover{
        background-color: darkorange; /* Change the background color on hover */
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.10); /* Increase the box shadow on hover */
    }

    .orangeButton:active, .orangeButtonNoGames:active{
        background-color: orangered; /* Change the background color when the button is active */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Reduce the box shadow on active */
        transform: translateY(2px); /* Add a slight downward movement */
    }

    .orangeButton::before, .orangeButtonNoGames::before{
        content: "";
        position: absolute;
        /*top: 0;
    left: 0;
    right: 0;
    bottom: 0;*/
        background-color: darkorange; /* Set the overlay color */
        opacity: 0; /* Initially hide the overlay */
        transition: opacity 0.3s ease; /* Add transition for opacity */
        z-index: -1; /* Position the overlay behind the text */
    }

    .orangeButton:hover::before, .orangeButtonNoGames:hover::before{
        opacity: 1; /* Show the overlay on hover */
    }

    .orangeButtonNoGames {
        right:0px;
    }

    #orangeButtonCreate, #orangeButtonCreate2, #orangeButtonCreateDis, #saveGameButton {
        font-family: 'Varela Round';
        background-color: orange;
        border-radius: 15px;
        height: 35px;
        width: 134px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
        transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Add transition for background color and box shadow */
        position: relative; /* Add position relative for the overlay */
        right: 80%;
        /*    bottom: 7%;
*/ /*transform: translateX(50%);*/
        overflow: hidden; /* Hide the overflow for the overlay */
        color: black; /* Set the text color to white */
        border: none; /* Remove border */
        display: inline-flex; /* Use flexbox for centering content */
        align-items: flex-end; /* Center content vertically */
        justify-content: flex-end; /* Center content horizontally */
        text-align: center; /* Center text */
        font-size: 12px; /* Adjust font size as needed */
        cursor: pointer; /* Add a pointer cursor on hover */
    }

    #orangeButtonCreate:hover, #saveGameButton:hover {
        background-color: darkorange; /* Change the background color on hover */
        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.10); /* Increase the box shadow on hover */
    }

    #orangeButtonCreate:active #saveGameButton:active {
        background-color: orangered; /* Change the background color when the button is active */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Reduce the box shadow on active */
        /*transform: translateY(2px);*/ /* Add a slight downward movement */
        /*transform: translateX(50%);*/
    }

    #orangeButtonCreate::before, #saveGameButton::before {
        content: "";
        /*position: absolute;*/
        /*top: 0;
    left: 0;
    right: 0;
    bottom: 0;*/
        background-color: darkorange; /* Set the overlay color */
        opacity: 0; /* Initially hide the overlay */
        transition: opacity 0.3s ease; /* Add transition for opacity */
        z-index: -1; /* Position the overlay behind the text */
    }

    #orangeButtonCreate:hover::before {
        opacity: 1; /* Show the overlay on hover */
    }

    #orangeButtonCreate2:disabled, .buttons:disabled, #orangeButtonCreateDis:disabled #saveGameButton:disabled {
        opacity: 30%;
        cursor: not-allowed;
    }

#GamesTable {
    width: 100%; /* Ensure table fills available space */



    border-collapse: collapse; /* Combine cell borders for cleaner appearance */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
    border-color: black;
}

    #GamesTable th,
    #GamesTable td {
        text-align: center; /* Center content for readability */
        padding: 9px 15px; /* Adjust padding for comfortable spacing */
        font-weight: normal; /* Maintain a balanced font weight */
    }

    /* Zebra Striping for Alternating Row Colors (Optional) */
    #GamesTable tbody tr:nth-child(even) {
        background-color: #eee; /* Lighter background for even rows (optional) */
    }

    #GamesTable tbody tr:hover {
        background-color: rgba(255, 165, 0, 0.4);
        object-fit: contain;
    }

    #GamesTable tbody tr:has(:hover):last-child {
        border-bottom-left-radius: 56px;
        border-bottom-right-radius: 56px;
        overflow: hidden;
        background-color: rgba(255, 165, 0, 0.4);
    }

.tableButtons {
    appearance: none;
    background-color: transparent;
    border: none;
    font-size: 16px;
    cursor: pointer;
}

/* Buttons (Modify as needed) */
.btn-primary {
    background-color: #0dcaf0; /* Blue for primary action */
    color: white; /* White text for better contrast */
    border: 1px solid #0dcaf0; /* Match button background color */
    appearance: none;
}

.btn-warning {
    background-color: #ffc107; /* Yellow for warnings */
    color: #000; /* Black text for contrast */
    border: 1px solid #ffc107; /* Match button background color */
}

.btn-danger {
    background-color: #dc3545; /* Red for errors or destructive actions */
    color: #fff; /* White text for contrast */
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-content {
    background-color: #739477;
    background-size: 100%;
    padding: 20px;
    /*border: 1px solid #888;*/
    width: 50%;
    height: 30em;
    border-radius: 25px;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    margin: 0; /* Remove any margins */
    transform: translateX(10%); /* Slight vertical offset */
}

#addGameForm, #EditGameForm {
    position: relative;
    right: 15em;
    bottom: 3em;
    font-family: 'Varela Round';
    color: white;
}


.textInForm {
    border-radius: 12px;
    height: 35px;
    font-size: 16px;
    width: 40%;
    padding: 0px 10px 0px 0px;
    font-family: 'Varela Round';
}

.newGameHeader {
    text-align: center;
    margin-right: 50%;
    /*    top: 2%;
*/ position: relative;
    transform: translateX(50%);
    bottom: 15px;
    font-size: 30px;
    color: white;
}

.buttons {
    font-family: 'Varela Round';
    border-radius: 15px;
    height: 35px;
    width: 134px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
    transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Add transition for background color and box shadow */
    position: relative; /* Add position relative for the overlay */
    right: 90%;
    bottom: 10%;
    transform: translateX(-65%);
    overflow: hidden; /* Hide the overflow for the overlay */
    border: none; /* Remove border */
    display: inline-flex; /* Use flexbox for centering content */
    align-items: flex-end; /* Center content vertically */
    justify-content: flex-end; /* Center content horizontally */
    text-align: center; /* Center text */
    font-size: 12px; /* Adjust font size as needed */
    cursor: pointer; /* Add a pointer cursor on hover */
    box-shadow: rgba(0,0,0,0.4) 0px 3px 10px;
}


#cancelButton, #cancelButton2 {
    background-color: green;
    color: white;
    display: inline-block;
    right: 85%;
    margin-right: 40px;
    width: 100px;
}


.close {
    color: #aaa;
    position: absolute;
    top: 10px;
    right: 95%;
    font-size: 28px;
    font-weight: bold;
    transition: color .22s ease-in-out, transform 0.2s ease-in-out;
}

    .close:hover,
    .close:focus {
        color: white;
        transform: scale3d(1.1,1.1);
        text-decoration: none;
        cursor: pointer;
    }

.radio-group {
    /*border-color: black;*/
}



.circle-radio {
    font-family: 'Varela Round';
    font-size: 20px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 40px;
    height: 35px;
    border-radius: 40%;
    /*border: 2px solid #333;*/
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-right: 10px;
    cursor: pointer;
    outline: none;
    position: relative;
    border-color: black;
    background-color: white;
    box-shadow: rgba(0,0,0,0.4) 0px 0px 8px;
    color: black;
    transition: transform 0.2s ease, background-color 0.2s, color 0.2s;
}



    .circle-radio::before {
        content: attr(data-value);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 12px;
        text-align:center;
        width:100px;
    }

    .circle-radio:hover {
        transform: scale(1.1, 1.1);
    }

    .circle-radio:checked {
        background-color: #36697C;
        /*border-color: black;*/
        color: white;
        outline: none;
        transform: scale(1.1, 1.1);
        font-weight: bold;
    }
/*.circle-radio:not(:checked) {
        background-color: white;*/ /* or specify the initial background color */
/*color: initial;*/ /* or specify the initial text color */
/*transform: scale(1, 1);
    }*/

#lastButton {
    width: 100px;
    border-radius: 12px;
    height: 35px;
    padding: 5px;
    text-align: center;
}
/* Center the form content */
#objects {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    color: black;
}

input[type="submit"], input[type="button"] {
    margin-top: 20px;
}

/*CSS FOR QUESTIONS.RAZOR*/

#gameNameInQuestions {
    position: relative;
    bottom: 80px;
    right: 280px;
    height: 28px;
    width: 330px;
    background-color: #EDECE7;
    border-radius: 5px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    padding: 5px 10px 5px 5px;
    box-shadow: rgba(0,0,0,0.4) 0px 0px 10px;
}

#maximum-question-screen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    align-items: center;
    position: relative;
    right: 50%;
    transform: translateX(100%);
    top: 15%;
    order: 2;
    height: 92%;
}

#basket-container{
        display:flex;
        align-items:baseline;
        flex-direction:column;
        position:relative;
        height:330px;
}
#queAnsDiv {
    display: flex;
    flex-direction: row; /* This will place the first child element to the right */
    height: 36em;
    width: 1280px;
    background-color: #EDECE7;
    padding: 30px;
    border-radius: 25px;
    box-shadow: rgba(0,0,0,0.4) 0px 0px 10px;
}

#questionsList {
    background-color: white;
    height: 30em;
    width: 30em;
    padding: 30px;
    border-radius: 25px;
    box-shadow: rgba(0,0,0,0.4) 0px 0px 10px;
    order: 1; /* Place questionsList on the right side */
}

#answersContainer {
    font-family: 'Varela Round';
    margin-right: 100px;
    position: relative;
    bottom: 3rem;
    background-color: transparent;
    
    padding: 10px;
    border-radius: 25px;
    order: 2; /* Place answersContainer on the left side */
}



.custom-file-upload {
    display: inline-block;
    padding: 6px 12px;
    cursor: pointer;
    background-image: url("../images/addPhoto.svg");
    background-size: contain;
    
    color: white;
    border: none;
    height: 60px;
    width: 48px;
    border-radius: 4px;
    font-family: Arial, sans-serif;
    font-size: 16px;
    text-align: center;
}

#answer-image-upload {
    background-image: url("../images/addPhoto.svg");
    background-size: inherit;
    background-position: center;
    background-repeat: no-repeat;
    background-color:white;
    cursor: pointer;
}

.answer-image {
    height: 100px;
    width: 170px;
}

.questionImage {
    
    position: relative;
    margin-right: 30px;
    height:72px;
    width:72px;
    display:flex;
    flex-direction:row;
}

    .questionImage img {
        max-width: 100%;
        height: auto;
    }

    .questionImage button {
        cursor: pointer;
        margin-top: 10px;
        padding: 5px 10px;
        background-color: transparent;
        color: black;
        border: none;
        border-radius: 5px;
    }

#questionImageAnswers {
    position: relative;
    bottom: 15px;
    
}

#questionText {
    font-family: 'Varela Round';
    height: 30px;
    width: 400px;
    border-radius: 15px;
    font-size: 12px;
    border: 1px solid black;
    padding: 0px 20px 0px 0px;
}

/*#questionsSheet {
    position: relative;
    bottom: 1em;
    width:420px;
    max-height: 350px;
    overflow-y:scroll;
    direction:ltr;
}#questionsSheet>#questions{
     direction:rtl;
 }*/
#questionsSheet {
    position: relative;
    bottom: 1em;
    width: 350px;
    height:350px;
    max-height: 350px;
    overflow-y: auto;
    overflow-x:auto;
    direction: ltr;
}
    #questionsSheet img{
        direction:rtl;
        
    }

    #questionsSheet > #questions {
        direction: rtl;
    }

    /* Custom scrollbar styling for WebKit browsers (Chrome, Safari) */
    #questionsSheet::-webkit-scrollbar {
        width: 8px; /* Width of the scrollbar */
    }

    #questionsSheet::-webkit-scrollbar-track {
        background: darkorange; /* Color of the scrollbar track */
        border-radius: 10px; /* Rounded corners */
    }

    #questionsSheet::-webkit-scrollbar-thumb {
        background: none; /* Color of the scrollbar handle */
        border-radius: 10px; /* Rounded corners */
    }

        #questionsSheet::-webkit-scrollbar-thumb:hover {
            background: #555; /* Color of the scrollbar handle when hovered */
        }

/* Custom scrollbar styling for Firefox */
#questionsSheet {
    scrollbar-width: thin; /* Thin scrollbar */
    scrollbar-color: orange none; /* Colors for the scrollbar handle and track */
}

/* Custom scrollbar styling for Internet Explorer and Edge */
#questionsSheet {
    -ms-overflow-style: -ms-autohiding-scrollbar; /* Auto-hiding scrollbar */
}

.question-marks-container {
    align-items: center;
    flex-direction: column;
    font-size: 16px;
    position: relative;
    top: 50px;
    direction: rtl;
    left: 70px;
    /* height: 200px; */
    width: 200px;
    display: flex;
    justify-content: center;
}
#question-marks {
    z-index: 2;
    width: 150px;
    
    height: auto;
}
/*div#questions {
    margin-bottom: 10px;
}*/


#eachQuestion {
    height: 25px;
    display: flex;
    align-items: center;
    margin-right:5px;
    justify-content: space-between;
    flex-direction: row-reverse;
    /*    cursor: pointer;
*/ padding: 5px 10px;
}

    #eachQuestion:hover {
        background-color: rgba(255, 165, 0, 0.4);
        border-radius: 10px;
    }

.active {
    background-color: rgba(255, 165, 0, 0.8); /* Highlight the active question */
    border-radius: 10px;
    cursor: default;
}

.not-active {
    cursor: pointer;
}

.question-icon {
    width: 18px;
    height: 18px;
    margin-left: 8px;
    vertical-align: middle;
}

.question-content {
    display: flex;
    align-items: center;
    flex-grow: 1;
}

.question-condition {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    position: relative;
    bottom: 90px;
    left: 10px;
}

.delete-icon {
    background: none;
    border: none;
    color: black;
    cursor: pointer;
    font-size: 16px;
    margin-right: 10px;
}


#answersList {
    display: flex;
    flex-direction: column;
    gap: 10px;
    height: 420px;
    width: 720px;
}

.buttons {
    margin-top: 20px;
}

#saveGameButton {
    position: fixed; /* Fix the position */
    bottom: 180px; /* Distance from the bottom */
    right: 1550px; /* Distance from the right */
    z-index: 1000; /* Ensure it appears above other content */
    font-size: 16px;
    display: flex;
    justify-content: center;
    align-items: center;
}


#answerInputContainer {
    display: grid;
    grid-template-columns: repeat(3,1fr); /* 3 columns */
    grid-template-rows: repeat(2, auto); /* 2 rows */
    gap: 1px; /* Adjust the gap between grid items as needed */
    position: relative;
    bottom: 80px;
}

.mb-3 {
    display: flex;
    flex-direction: column-reverse;
    /*justify-content:stretch;*/
    /*border: 1px solid #ccc;*/ /* Optional: add a border */
    border-radius: 4px; /* Optional: rounded corners */
    box-sizing: border-box; /* Ensure padding and border are included in the element's total width and height */
    font-family: 'Varela Round';
    position: relative;
    margin-bottom:-15px;
    bottom: 15px;
}


.char-count {
    position: relative;
    top: 90px; /* Position below the textarea */
    right: 105px;
    font-size: 12px;
}

#textAreaLookAlike {
    background-image: url(/images/plus.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-color: rgba(255,255,255, 0.2);
    border: none;
    box-shadow: rgba(0,0,0, 0.2) 0px 0px 5px;
    position: relative;
    right: 34px;
    top: 29px;
    transition: background-color 0.6s, transform 0.6s, box-shadow 0.6s;
}


    #textAreaLookAlike:hover {
        background-color: rgba(255,255,255,0.5);
        box-shadow: rgba(0,0,0, 0.2) 0px 0px 7px;
        transform: scale(1.08,1.08);
        cursor: pointer;
    }

/*.answers {
    width: 170px;*/ /* Make the textarea take the full width of its container */
    /*height: 100px;*/ /* Set a fixed height */
    /*padding: 25px 15px 15px 15px;*/ /* Add padding inside the textarea */
    /*margin-top: 5px;*/ /* Add some margin on top */
    /*margin-bottom: 5px;*/ /* Add some margin on bottom */
    /*border: 1px solid #ccc;*/ /* Light gray border */
    /*border-radius: 50px 50px 50px 50px;*/ /* Rounded corners */
    /*font-size: 14px;*/ /* Increase the font size */
    /*box-sizing: border-box;*/ /* Ensure padding is included in the width */
    /*text-align: center;
    display: flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    align-self: center;
    justify-self: center;
    resize: none;*/ /* Disable resizing */
    /*white-space: pre-wrap;*/ /* Ensure text wraps */
    /*overflow-wrap: break-word;*/ /* Ensure words break correctly */
    /*font-family: 'Varela Round';
    position: relative;
    bottom:15px;
}
.answersImageExist {
    width: 170px;*/ /* Make the textarea take the full width of its container */
    /*height: 100px;*/ /* Set a fixed height */
    /*padding: 25px 15px 15px 15px;*/ /* Add padding inside the textarea */
    /*margin-top: 5px;*/ /* Add some margin on top */
    /*margin-bottom: 5px;*/ /* Add some margin on bottom */
    /*border: 1px solid #ccc;*/ /* Light gray border */
    /*border-radius: 50px 50px 50px 50px;*/ /* Rounded corners */
    /*font-size: 14px;*/ /* Increase the font size */
    /*box-sizing: border-box;*/ /* Ensure padding is included in the width */
    /*text-align: center;
    display: flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    align-self: center;
    justify-self: center;
    resize: none;*/ /* Disable resizing */
    /*white-space: pre-wrap;*/ /* Ensure text wraps */
    /*overflow-wrap: break-word;*/ /* Ensure words break correctly */
    /*font-family: 'Varela Round';
    position: relative;
    bottom: 0px;
    right:35px;
   
}*/
.answers, .answersImageExist {
    width: 170px; /* Keep width consistent for both */
    height: 100px; /* Keep height consistent for both */
    padding: 15px; /* Adjust padding for consistency */
    margin-top: 5px; /* Add some margin on top */
    margin-bottom: 5px; /* Add some margin on bottom */
    border: 1px solid #ccc; /* Light gray border */
    border-radius: 50px; /* Rounded corners */
    font-size: 14px; /* Font size */
    box-sizing: border-box; /* Ensure padding is included in the width */
    text-align: center;
    display: flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    align-self: center;
    justify-self: center;
    resize: none; /* Disable resizing */
    white-space: pre-wrap; /* Ensure text wraps */
    overflow-wrap: break-word; /* Ensure words break correctly */
    font-family: 'Varela Round';
    position: relative;
    bottom: 15px;
}

/* Additional styles specific to image container */
.answersImageExist {
    margin-bottom:20px;
    padding: 0; /* Remove padding for image container */
    right: 0; /* Reset any specific positioning */
    position:relative;
    top:0px;
    
}

.answers:focus {
    border: 1px solid #739477; /* Change border color on focus */
    outline: none; /* Remove default outline */
    box-shadow: 0 0 5px rgba(115, 148, 119, 0.6); /* Add a subtle shadow */
}

.label-is-correct {
    display: flex; /* Use flexbox to align items */
    align-self: center; /* Vertically center items */
    /*margin-top: 10px;*/ /* Add some margin on top */
    position: relative;
    top: 45px;
}

    .label-is-correct input[type="checkbox"] {
        margin-right: 5px; /* Space between checkbox and label text */
        height: 20px;
        width: 20px;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 50%;
        border: 1px solid #ccc;
        outline: none;
        cursor: pointer;
        background-color: #fff;
        display: inline-block;
        position: relative;
        bottom: 25px;
    }

        .label-is-correct input[type="checkbox"]:checked {
            border: 2px solid #739477;
        }

            .label-is-correct input[type="checkbox"]:checked::after {
                content: '';
                position: absolute;
                top: 30%;
                left: 70%;
                transform: translate(-50%, -50%);
                width: 30px; /* Make the checkmark larger than the checkbox */
                height: 30px; /* Make the checkmark larger than the checkbox */
                background-image: url(../images/checkMark.svg); /* Use the checkmark image */
                background-size: contain; /* Ensure the image scales correctly */
                background-repeat: no-repeat; /* Do not repeat the image */

                z-index: 1; /* Ensure it appears above the checkbox */
            }

        .label-is-correct input[type="checkbox"]:disabled {
            background-color: #e0e0e0; /* Gray background */
            border: 1px solid #c0c0c0; /* Light gray border */
            cursor: not-allowed; /* Change cursor to indicate disabled state */
        }


.toggle-container {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    top: 155px;
}

.switch {
    position: relative;
    display: inline-block;
    width: 34px;
    height: 20px;
}

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: 0.4s;
    border-radius: 20px;
}

    .slider:before {
        position: absolute;
        content: "";
        height: 14px;
        width: 14px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
    }

input:checked + .slider {
    background-color: #2196F3;
}

    input:checked + .slider:before {
        transform: translateX(14px);
    }

.custom-button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
    position: fixed;
    transition: box-shadow 0.2s ease-in;
}

    .custom-button:disabled {
        cursor: not-allowed;
    }

    .custom-button:hover:not(:disabled) {
        background-color: darkorange;
    }

    .custom-button:hover {
        box-shadow: rgba(0,0,0, 0.2) 0px 0px 7px;
    }



div.sticky-buttons, div.sticky-but-newque {
    position: fixed;
    bottom: 25px;
    z-index: 1;
    display: flex;
    gap: 2px;
}

div.sticky-buttons {
    right: 1200px;
}

div.sticky-but-newque {
    right: 1140px;
}

.tooltip-button-wrapper {
    position: relative;
    display: inline-block;
}

    .tooltip-button-wrapper .tooltip-wrapper {
        height: 40px;
        width: 120px;
    }

    .tooltip-button-wrapper .tooltip-text {
        bottom: 100%; /* Position above the element */
        left: 50%;
        transform: translateX(-50%);
    }
